This patch forwards the original `Authorization` header on redirect in React Native.

Upstream issue: https://github.com/facebook/react-native/issues/34627
Upstream fix: https://github.com/facebook/react-native/pull/36946

diff --git a/node_modules/react-native/Libraries/Network/RCTHTTPRequestHandler.mm b/node_modules/react-native/Libraries/Network/RCTHTTPRequestHandler.mm
index 274f3810f2..6190156fcf 100644
--- a/node_modules/react-native/Libraries/Network/RCTHTTPRequestHandler.mm
+++ b/node_modules/react-native/Libraries/Network/RCTHTTPRequestHandler.mm
@@ -143,6 +134,22 @@ - (void)URLSession:(NSURLSession *)session

   NSArray<NSHTTPCookie *> *cookies = [[NSHTTPCookieStorage sharedHTTPCookieStorage] cookiesForURL:request.URL];
   nextRequest.allHTTPHeaderFields = [NSHTTPCookie requestHeaderFieldsWithCookies:cookies];
+  NSString *originalAuthorizationHeader = [task.originalRequest valueForHTTPHeaderField:@"Authorization"];
+
+  // Forward the original `Authorization` header if set and origin is the same
+  if (originalAuthorizationHeader) {
+    NSURL *originalURL = task.originalRequest.URL;
+    NSURL *nextURL = request.URL;
+
+    BOOL hasSameScheme = [originalURL.scheme isEqualToString:nextURL.scheme];
+    BOOL hasSameHost = [originalURL.host isEqualToString:nextURL.host];
+    BOOL hasSamePort = [originalURL.port isEqualToNumber:nextURL.port] || (!originalURL.port && !nextURL.port);
+
+    if (hasSameScheme && hasSameHost && hasSamePort) {
+      [nextRequest addValue:originalAuthorizationHeader forHTTPHeaderField:@"Authorization"];
+    }
+  }
+
   completionHandler(nextRequest);
 }

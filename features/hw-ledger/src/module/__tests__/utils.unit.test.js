import { PsbtV2 } from '@exodus/ledger-bitcoin'

import {
  assertPsbtOnlyHasAllowedDerivationPaths,
  buildFauxXPUB,
  getMultisigWalletPolicy,
  tagPsbtWithDerivationPaths,
} from '../assets/utils'

test('buildFauxXPUB()', () => {
  const pk = Buffer.from(
    '03b8319b0454dcc30bf37e6f6fc60ffefc838f2b7e6a15f6b546b57bc6e2569941',
    'hex'
  )
  const chain = Buffer.from(
    '03b8319b0454dcc30bf37e6f6fc60ffefc838f2b7e6a15f6b546b57bc6e25699',
    'hex'
  )

  expect(buildFauxXPUB(pk, chain).toString('hex')).toBe(
    'xpub661MyMwAqRbcEaaiEEicVJe4b4Hz4oL1B2cXasCmsDGMUQT3pQTScXko1eNzq4XufpwacDTPxVoHt2Lgh96wo5z4BSECxGjcHkjkx6adDAf'
  )
})

describe('assertPsbtOnlyHasAllowedDerivationPaths()', () => {
  const psbtBuffer = Buffer.from(
    '70736274ff0102040200000001030400000000010401020105010201fb0402000000000100fd34010200000000010158e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff0480f0fa020000000016001472774315bf3dc014a4b1465761c360697eadb6f780f0fa0200000000160014f84d1aa0db704bde59a093d9d5082c56e546eb1380f0fa0200000000225120fa7baca065aff0debc3bc3a7145d548b689ce1a553bc10ea0170d6532095e90280f0fa0200000000225120aa7c362113bccee7353d306962cea6bcfd742b9b21819de0f049aa63c8831ed002473044022033dff0a30bc724bc4d2869284fe79145f9098728dfb1c41bed3db9b77df99dd902200f756b05a20729e64661833690268fa6925f2d997d36dc7818047be9b9759ad5012102dfb58125642407d02a4821197ed2ca7a7f8cd9427ac30d2dbce509c837d6dba20000000001011f80f0fa020000000016001472774315bf3dc014a4b1465761c360697eadb6f7220602dfb58125642407d02a4821197ed2ca7a7f8cd9427ac30d2dbce509c837d6dba21875cc42dc5400008000000080000000800000000000000000010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0400000000011004ffffffff000100fd34010200000000010158e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff0480f0fa020000000016001472774315bf3dc014a4b1465761c360697eadb6f780f0fa0200000000160014f84d1aa0db704bde59a093d9d5082c56e546eb1380f0fa0200000000225120fa7baca065aff0debc3bc3a7145d548b689ce1a553bc10ea0170d6532095e90280f0fa0200000000225120aa7c362113bccee7353d306962cea6bcfd742b9b21819de0f049aa63c8831ed002473044022033dff0a30bc724bc4d2869284fe79145f9098728dfb1c41bed3db9b77df99dd902200f756b05a20729e64661833690268fa6925f2d997d36dc7818047be9b9759ad5012102dfb58125642407d02a4821197ed2ca7a7f8cd9427ac30d2dbce509c837d6dba20000000001011f80f0fa0200000000160014f84d1aa0db704bde59a093d9d5082c56e546eb132206032c6638ae002a21da34ca94904ef8daa90eeb58e04ff8c3242b1b5846ccc0d8121875cc42dc5400008000000080000000800000000001000000010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0401000000011004ffffffff0001030870c9fa020000000001041976a914f9cadf838dcf10f4292a8d5735c41d39ebc21e2488ac002202035bc73838f45d0fc4d6e14fade075b192fb73ff7fb0a5815e3b6d6fde669408231875cc42dc540000800000008000000080010000000000000001030870c9fa0200000000010416001447bdd9b99fede22c6352d65a70cf1087d3fe7b0b00',
    'hex'
  )
  const psbt = new PsbtV2()
  psbt.deserialize(psbtBuffer)

  const psbtBufferTaproot = Buffer.from(
    '70736274ff0102040200000001030400000000010401020105010201fb04020000000001012b80f0fa0200000000225120fa7baca065aff0debc3bc3a7145d548b689ce1a553bc10ea0170d6532095e902010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0403000000011004ffffffff0117206c85aae5f51cc0aeaf3994a98f796724c5b912dfe81fc10d3133a1612f6a4eee0001012b80f0fa0200000000225120aa7c362113bccee7353d306962cea6bcfd742b9b21819de0f049aa63c8831ed0010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0404000000011004ffffffff0117206a404be33e2843947ff41187340dbdf56ad83431c2a9a78004ca3f8fdfe92a930001030870c9fa020000000001041976a914f9cadf838dcf10f4292a8d5735c41d39ebc21e2488ac0001030870c9fa020000000001042251202b3c7f28e7fec1f07e9c34c78166171563f812a172f7de9a06624fdfd4f49ef900',
    'hex'
  )
  const psbtTaproot = new PsbtV2()
  psbtTaproot.deserialize(psbtBufferTaproot)

  it('should throw when accessing derivation paths that are not allowed', () => {
    expect(() => assertPsbtOnlyHasAllowedDerivationPaths(psbt, '75cc42dc', [])).toThrow(
      'found unsupported derivation path'
    )
  })

  it('should allow when accessing derivation paths that are allowed', () => {
    expect(() =>
      assertPsbtOnlyHasAllowedDerivationPaths(psbt, '75cc42dc', [
        `m/84'/0'/0'/0/0`,
        `m/84'/0'/0'/0/1`,
      ])
    ).not.toThrow()

    expect(() =>
      assertPsbtOnlyHasAllowedDerivationPaths(psbtTaproot, '75cc42dc', [
        `m/86'/0'/0'/0/0`,
        `m/86'/0'/0'/0/1`,
      ])
    ).not.toThrow()
  })
})

describe('tagPsbtWithDerivationPaths()', () => {
  it('should correctly tag segwit inputs & outputs', () => {
    const psbtBuffer = Buffer.from(
      '70736274ff0102040200000001030400000000010401020105010201fb0402000000000100fd34010200000000010158e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff0480f0fa020000000016001472774315bf3dc014a4b1465761c360697eadb6f780f0fa0200000000160014f84d1aa0db704bde59a093d9d5082c56e546eb1380f0fa0200000000225120fa7baca065aff0debc3bc3a7145d548b689ce1a553bc10ea0170d6532095e90280f0fa0200000000225120aa7c362113bccee7353d306962cea6bcfd742b9b21819de0f049aa63c8831ed002473044022033dff0a30bc724bc4d2869284fe79145f9098728dfb1c41bed3db9b77df99dd902200f756b05a20729e64661833690268fa6925f2d997d36dc7818047be9b9759ad5012102dfb58125642407d02a4821197ed2ca7a7f8cd9427ac30d2dbce509c837d6dba20000000001011f80f0fa020000000016001472774315bf3dc014a4b1465761c360697eadb6f7010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0400000000011004ffffffff000100fd34010200000000010158e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff0480f0fa020000000016001472774315bf3dc014a4b1465761c360697eadb6f780f0fa0200000000160014f84d1aa0db704bde59a093d9d5082c56e546eb1380f0fa0200000000225120fa7baca065aff0debc3bc3a7145d548b689ce1a553bc10ea0170d6532095e90280f0fa0200000000225120aa7c362113bccee7353d306962cea6bcfd742b9b21819de0f049aa63c8831ed002473044022033dff0a30bc724bc4d2869284fe79145f9098728dfb1c41bed3db9b77df99dd902200f756b05a20729e64661833690268fa6925f2d997d36dc7818047be9b9759ad5012102dfb58125642407d02a4821197ed2ca7a7f8cd9427ac30d2dbce509c837d6dba20000000001011f80f0fa0200000000160014f84d1aa0db704bde59a093d9d5082c56e546eb13010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0401000000011004ffffffff0001030870c9fa020000000001041976a914f9cadf838dcf10f4292a8d5735c41d39ebc21e2488ac0001030870c9fa0200000000010416001447bdd9b99fede22c6352d65a70cf1087d3fe7b0b00',
      'hex'
    )
    // This is a PSBT with the correct "bip32Derivation" information attached to it
    const expectedPsbtBuffer = Buffer.from(
      '70736274ff0102040200000001030400000000010401020105010201fb0402000000000100fd34010200000000010158e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff0480f0fa020000000016001472774315bf3dc014a4b1465761c360697eadb6f780f0fa0200000000160014f84d1aa0db704bde59a093d9d5082c56e546eb1380f0fa0200000000225120fa7baca065aff0debc3bc3a7145d548b689ce1a553bc10ea0170d6532095e90280f0fa0200000000225120aa7c362113bccee7353d306962cea6bcfd742b9b21819de0f049aa63c8831ed002473044022033dff0a30bc724bc4d2869284fe79145f9098728dfb1c41bed3db9b77df99dd902200f756b05a20729e64661833690268fa6925f2d997d36dc7818047be9b9759ad5012102dfb58125642407d02a4821197ed2ca7a7f8cd9427ac30d2dbce509c837d6dba20000000001011f80f0fa020000000016001472774315bf3dc014a4b1465761c360697eadb6f7220602dfb58125642407d02a4821197ed2ca7a7f8cd9427ac30d2dbce509c837d6dba21875cc42dc5400008000000080000000800000000000000000010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0400000000011004ffffffff000100fd34010200000000010158e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff0480f0fa020000000016001472774315bf3dc014a4b1465761c360697eadb6f780f0fa0200000000160014f84d1aa0db704bde59a093d9d5082c56e546eb1380f0fa0200000000225120fa7baca065aff0debc3bc3a7145d548b689ce1a553bc10ea0170d6532095e90280f0fa0200000000225120aa7c362113bccee7353d306962cea6bcfd742b9b21819de0f049aa63c8831ed002473044022033dff0a30bc724bc4d2869284fe79145f9098728dfb1c41bed3db9b77df99dd902200f756b05a20729e64661833690268fa6925f2d997d36dc7818047be9b9759ad5012102dfb58125642407d02a4821197ed2ca7a7f8cd9427ac30d2dbce509c837d6dba20000000001011f80f0fa0200000000160014f84d1aa0db704bde59a093d9d5082c56e546eb132206032c6638ae002a21da34ca94904ef8daa90eeb58e04ff8c3242b1b5846ccc0d8121875cc42dc5400008000000080000000800000000001000000010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0401000000011004ffffffff0001030870c9fa020000000001041976a914f9cadf838dcf10f4292a8d5735c41d39ebc21e2488ac002202035bc73838f45d0fc4d6e14fade075b192fb73ff7fb0a5815e3b6d6fde669408231875cc42dc540000800000008000000080010000000000000001030870c9fa0200000000010416001447bdd9b99fede22c6352d65a70cf1087d3fe7b0b00',
      'hex'
    )
    const psbt = new PsbtV2()
    psbt.deserialize(psbtBuffer)
    expect(() =>
      tagPsbtWithDerivationPaths(psbt, '75cc42dc', {
        "m/84'/0'/0'/0/0": Buffer.from(
          '02dfb58125642407d02a4821197ed2ca7a7f8cd9427ac30d2dbce509c837d6dba2',
          'hex'
        ),
        "m/84'/0'/0'/0/1": Buffer.from(
          '032c6638ae002a21da34ca94904ef8daa90eeb58e04ff8c3242b1b5846ccc0d812',
          'hex'
        ),
        "m/84'/0'/0'/1/0": Buffer.from(
          '035bc73838f45d0fc4d6e14fade075b192fb73ff7fb0a5815e3b6d6fde66940823',
          'hex'
        ),
      })
    ).not.toThrow()

    expect(expectedPsbtBuffer.toString('hex')).toBe(psbt.serialize().toString('hex'))
  })

  it('should correctly tag taproot inputs & ouputs', () => {
    // This is a PSBT with the correct "tapBip32Derivation" information attached to it
    const psbtBuffer = Buffer.from(
      '70736274ff0102040200000001030400000000010401020105010201fb04020000000001012b80f0fa0200000000225120fa7baca065aff0debc3bc3a7145d548b689ce1a553bc10ea0170d6532095e902010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0403000000011004ffffffff0117206c85aae5f51cc0aeaf3994a98f796724c5b912dfe81fc10d3133a1612f6a4eee0001012b80f0fa0200000000225120aa7c362113bccee7353d306962cea6bcfd742b9b21819de0f049aa63c8831ed0010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0404000000011004ffffffff0117206a404be33e2843947ff41187340dbdf56ad83431c2a9a78004ca3f8fdfe92a930001030870c9fa020000000001041976a914f9cadf838dcf10f4292a8d5735c41d39ebc21e2488ac0001030870c9fa020000000001042251202b3c7f28e7fec1f07e9c34c78166171563f812a172f7de9a06624fdfd4f49ef900',
      'hex'
    )
    const expectedPsbtBuffer = Buffer.from(
      '70736274ff0102040200000001030400000000010401020105010201fb04020000000001012b80f0fa0200000000225120fa7baca065aff0debc3bc3a7145d548b689ce1a553bc10ea0170d6532095e902010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0403000000011004ffffffff21166c85aae5f51cc0aeaf3994a98f796724c5b912dfe81fc10d3133a1612f6a4eee190075cc42dc56000080000000800000008000000000000000000117206c85aae5f51cc0aeaf3994a98f796724c5b912dfe81fc10d3133a1612f6a4eee0001012b80f0fa0200000000225120aa7c362113bccee7353d306962cea6bcfd742b9b21819de0f049aa63c8831ed0010e20a5dea3f4e8b99daf2c962151b457f650f85a75ab634207a29a4cc1fcacab310d010f0404000000011004ffffffff21166a404be33e2843947ff41187340dbdf56ad83431c2a9a78004ca3f8fdfe92a93190075cc42dc56000080000000800000008000000000010000000117206a404be33e2843947ff41187340dbdf56ad83431c2a9a78004ca3f8fdfe92a930001030870c9fa020000000001041976a914f9cadf838dcf10f4292a8d5735c41d39ebc21e2488ac0001030870c9fa020000000001042251202b3c7f28e7fec1f07e9c34c78166171563f812a172f7de9a06624fdfd4f49ef9210766489da524ef8a290fc530db69e5fdc7304962c81e690cb4d90fc6c5d71a9143190075cc42dc560000800000008000000080010000000000000000',
      'hex'
    )

    const psbt = new PsbtV2()
    psbt.deserialize(psbtBuffer)
    expect(() =>
      tagPsbtWithDerivationPaths(psbt, '75cc42dc', {
        "m/86'/0'/0'/0/0": Buffer.from(
          '026c85aae5f51cc0aeaf3994a98f796724c5b912dfe81fc10d3133a1612f6a4eee',
          'hex'
        ),
        "m/86'/0'/0'/0/1": Buffer.from(
          '026a404be33e2843947ff41187340dbdf56ad83431c2a9a78004ca3f8fdfe92a93',
          'hex'
        ),
        "m/86'/0'/0'/1/0": Buffer.from(
          '0266489da524ef8a290fc530db69e5fdc7304962c81e690cb4d90fc6c5d71a9143',
          'hex'
        ),
      })
    ).not.toThrow()

    expect(expectedPsbtBuffer.toString('hex')).toBe(psbt.serialize().toString('hex'))
  })
})

describe('getMultisigWalletPolicy()', () => {
  it('should create a multisig wallet policy', () => {
    const fpr = '1234567890'
    const xpub =
      'xpub661MyMwAqRbcEaaiEEicVJe4b4Hz4oL1B2cXasCmsDGMUQT3pQTScXko1eNzq4XufpwacDTPxVoHt2Lgh96wo5z4BSECxGjcHkjkx6adDAf'
    const purpose = '86'
    const coin = 'bitcoin'
    const account = '0'
    const multisigData = {
      xpubs: [
        'xpub661MyMwAqRbcEaaiEEicVJe4b4Hz4oL1B2cXasCmsDGMUQT3pQTScXko1eNzq4XufpwacDTPxVoHt2Lgh96wo5z4BSECxGjcHkjkx6adDAf',
        'xpub6CUGRUonZSQ4TWtTMmzXdrXDtypWKiKrhko4egpiMZbpiaQL2jkwSB1icqYh2cfDfVxdx4df189oLKnC5fSwqPfgyP3hooxujYzAu3fDVmz',
      ],
      threshold: 2,
      internalXpub:
        'xpub661MyMwAqRbcEaaiEEicVJe4b4Hz4oL1B2cXasCmsDGMUQT3pQTScXko1eNzq4XufpwacDTPxVoHt2Lgh96wo5z4BSECxGjcHkjkx6adDAf',
    }

    const walletPolicy = getMultisigWalletPolicy(fpr, xpub, purpose, coin, account, multisigData)
    expect(walletPolicy.name).toBe('Multisig')
    expect(walletPolicy.descriptorTemplate).toBe('tr(@0/**,sortedmulti_a(2,@1/**,@2/**))')
    expect(walletPolicy.keys).toStrictEqual([
      multisigData.internalXpub,
      `[${fpr}/${purpose}/${coin}/${account}]${xpub}`,
      multisigData.xpubs[1],
    ])
  })
})
